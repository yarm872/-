'''В левом верхнем углу прямоугольной таблицы размером N×M находится черепашка. В каждой клетке таблицы записано
некоторое число. Черепашка может перемещаться вправо или вниз, при этом маршрут черепашки заканчивается в правом
нижнем углу таблицы.

Подсчитаем сумму чисел, записанных в клетках, через которую проползла черепашка (включая начальную и конечную
клетку). Найдите наибольшее возможное значение этой суммы и маршрут, на котором достигается эта сумма.

Входные данные В первой строке входных данных записаны два натуральных числа N и M, не превосходящих 100 — размеры
таблицы. Далее идет N строк, каждая из которых содержит M чисел, разделенных пробелами — описание таблицы. Все числа
в клетках таблицы целые и могут принимать значения от 0 до 100.

Выходные данные Первая строка выходных данных содержит максимальную возможную сумму, вторая – маршрут, на котором
достигается эта сумма. Маршрут выводится в виде последовательности, которая должна содержать N-1 букву D, означающую
передвижение вниз и M-1 букву R, означающую передвижение направо. Если таких последовательностей несколько,
необходимо вывести ровно одну (любую) из них.
5 5
9 9 9 9 9
3 0 0 0 0
9 9 9 9 9
6 6 6 6 8
9 9 9 9 9
74
D D R R R R D D '''
n, m = map(int, input().split())
a = []
for i in range(n):
    s = list(map(int, input().split()))
    a.append(s)
pr = [[1] * m for i in range(n)]
pr[0][0] = a[0][0]
for i in range(1, n):
    pr[i][0] = pr[i - 1][0] + a[i][0]
for j in range(1, m):
    pr[0][j] = pr[0][j - 1] + a[0][j]

for i in range(1, n):
    for j in range(1, m):
        pr[i][j] = max(pr[i - 1][j], pr[i][j - 1]) + a[i][j]
i = n - 1
j = m - 1
s = ''
while not (i == 0 and j == 0):

    if i > 0 and pr[i][j] - a[i][j] == pr[i - 1][j]:
        i -= 1
        s = 'D ' + s
    else:
        j -= 1
        s = 'R ' + s
print(pr[n - 1][m - 1])
print(s)

