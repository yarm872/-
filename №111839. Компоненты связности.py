'''Дан неориентированный невзвешенный граф. Необходимо посчитать количество его компонент связности и вывести их.

Входные данные
В первой строке дано число n — количество вершин графа ( 1≤ n ≤500 ). Далее в n строках дана матрица смежности графа.

Выходные данные В первой строчке выходного файла выведите количество компонент связности. Далее выведите сами
компоненты связности в следующем формате: в первой строке количество вершин в компоненте, во второй — сами вершины в
произвольном порядке.
входные данные
5
0 1 0 1 0
1 0 0 0 0
0 0 0 0 1
1 0 0 0 0
0 0 1 0 0
выходные данные
2
3
1 2 4
2
3 5'''
def dfs(s):
    vis[s]=True
    b1.append(s+1)
    for i in range(n):
        if a[s][i]!=0 and vis[i]==False:
            dfs(i)

n=int(input())
a=[list(map(int,input().split())) for i in range(n)]

vis=[False]*n
s=0
b1=[]
b=[]
for i in range(n):
    if not vis[i]:
        ch=1
        s=i
    while ch!=0:
        dfs(s)
        if vis[s]:
            ch=0
        b.append(b1)
        b1=[]
print(len(b))
for i in range(len(b)):
    print(len(b[i]))
    print(*b[i])
