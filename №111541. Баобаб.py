'''Дан неориентированный невзвешенный граф. Необходимо определить, является ли он деревом.

Входные данные В первой строке входного файла содержится одно натуральное число N (N ≤ 100) - количество вершин в
графе. Далее в N строках по N чисел - матрица смежности графа: в i-ой строке на j-ом месте стоит 1, если вершины i и
j соединены ребром, и 0, если ребра между ними нет. На главной диагонали матрицы стоят нули. Матрица симметрична
относительно главной диагонали.

Выходные данные
Вывести "YES", если граф является деревом, и "NO" иначе.
входные данные
6
0 1 1 0 0 0
1 0 1 0 0 0
1 1 0 0 0 0
0 0 0 0 1 0
0 0 0 1 0 0
0 0 0 0 0 0
выходные данные
NO
входные данные
3
0 1 0
1 0 1
0 1 0
выходные данные
YES'''


def dfs(s):
    vis[s] = True
    for i in range(n):
        if a[s][i] != 0 and vis[i] == False:
            dfs(i)


n = int(input())
a = [list(map(int, input().split())) for i in range(n)]
kol = 0
for i in range(n):
    for j in range(i + 1, n):
        if a[i][j] == 1:
            kol += 1
if kol != n - 1:
    print('NO')
    exit()
vis = [False] * n
s = 0
dfs(s)
for i in vis:
    if not i:
        print('NO')
        exit()
print('YES')