'''В таблице из N строк и N столбцов клетки заполнены цифрами от 0 до 9. Требуется найти такой путь из клетки (1,
1) в клетку (N, N), чтобы сумма цифр в клетках, через которые он пролегает, была минимальной; из любой клетки ходить
можно только вниз или вправо.

Входные данные
В первой строке находится число N. В следующих N строках содержатся по N цифр без пробелов. 2 <= N <= 250.

Выходные данные Выводятся N строк по N символов. Символ решётка показывает, что маршрут проходит через эту клетку,
а минус - что не проходит. Если путей с минимальной суммой цифр несколько, вывести любой.
2
00
00
выходные данные
#-
##'''
n = int(input())
a = []

for i in range(n):
    s = list(map(int, input()))
    a.append(s)

pr = [[1] * n for i in range(n)]
pr[0][0] = a[0][0]

for i in range(1, n):
    pr[i][0] = pr[i - 1][0] + a[i][0]
for j in range(1, n):
    pr[0][j] = pr[0][j - 1] + a[0][j]

for i in range(1, n):
    for j in range(1, n):
        pr[i][j] = min(pr[i - 1][j], pr[i][j - 1]) + a[i][j]
i = n - 1
j = n - 1
pr1 = [['-'] * n for i in range(n)]
pr1[i][j] = '#'
while not (i == 0 and j == 0):

    if i > 0 and pr[i][j] - a[i][j] == pr[i - 1][j]:
        i -= 1
        pr1[i][j] = '#'
    else:
        j -= 1
        pr1[i][j] = '#'

for i in range(n):
    for j in range(n):
        print(pr1[i][j], end='')
    print()