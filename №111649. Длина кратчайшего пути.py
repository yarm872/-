'''В неориентированном графе требуется найти длину минимального пути между двумя вершинами.

Входные данные Первым на вход поступает число N –– количество вершин в графе ( 1≤ N ≤100 ). Затем записана матрица
смежности (0 обозначает отсутствие ребра, 1 –– наличие ребра). Далее задаются номера двух вершин –– начальной и
конечной.

Выходные данные Выведите L –– длину кратчайшего пути (количество ребер, которые нужно пройти). Если пути не
существует, выведите одно число -1 .

Примеры
входные данные
5
0 1 0 0 1
1 0 1 0 0
0 1 0 0 0
0 0 0 0 0
1 0 0 0 0
3 5
выходные данные
3'''
n=int(input())
a=[]
for i in range(n):
    s=list(map(int,input().split()))
    a.append(s)
s,f=map(int,input().split())
s-=1
f-=1
vis=[-1]*n
vis[s]=0
q=[s]
while q:
    b=q.pop(0)
    for i in range(n):
        if a[b][i]==1 and vis[i]==-1:
            q.append(i)
            vis[i]=vis[b]+1
print(vis[f])