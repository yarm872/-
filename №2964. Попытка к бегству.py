"""Узник пытается бежать из замка, который состоит из N×M квадратных комнат, расположенных в виде прямоугольника NxM. 
Между любыми двумя соседними комнатами есть дверь, однако некоторые комнаты закрыты и попасть в них нельзя. В начале 
узник находится в левой верхней комнате и для спасения ему надо попасть в противоположную правую нижнюю комнату. 
Времени у него немного, всего он может побывать не более, чем в N+M-1 комнате на своем пути, то есть перемещаться он 
должен только вправо или вниз. Определите количество маршрутов, которые ведут к выходу. 

Входные данные Первая строчка входных данных содержит натуральные числа N и M, не превосходящих 1000. Далее идет план 
замка в виде N строчек из M чисел в каждой. Одно число соответствует одной комнате: 1 означает, что в комнату можно 
попасть, 0 – что комната закрыта. 

Выходные данные Программа должна напечатать количество маршрутов, ведущих узника к выходу и проходящих через M+N-1 
комнату, или слово Impossible, если таких маршрутов не существует. 

Входные данные подобраны таким образом, что искомое число маршрутов не превосходит 2.000.000.000.
3 5
1 1 1 1 1
1 0 1 0 1
1 1 1 1 1"""
n,m=map(int,input().split())
a=[]
for i in range(n):
    s=list(map(int,input().split()))
    a.append(s)
b=[[1]*m for i in range(n)]
if a[0][0]==0:
    b[0][0]=0
for i in range(1,n):
    if a[i][0]==0:
        b[i][0]=0
    else:
        b[i][0]=b[i-1][0]
for i in range(1,m):
    if a[0][i]==0:
        b[0][i]=0
    else:
        b[0][i]=b[0][i-1]

for i in range(1,n):
    for j in range(1,m):
        if a[i][j]==0:
            b[i][j]=0
        else:
            b[i][j]+=b[i-1][j]+b[i][j-1]-1



if b[n-1][m-1]==0:
    print('Impossible')
else:
    print(b[n-1][m-1])
